diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/CloudBox.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/CloudBox.js
deleted file mode 100644
index f67b7a0..0000000
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/CloudBox.js
+++ /dev/null
@@ -1,85 +0,0 @@
-import React from 'react';
-
-import { Box, Flex, Typography } from '@strapi/design-system';
-import { pxToRem, useTracking } from '@strapi/helper-plugin';
-import { useIntl } from 'react-intl';
-import styled from 'styled-components';
-
-import cloudIconBackgroundImage from './assets/strapi-cloud-background.png';
-import cloudFlagsImage from './assets/strapi-cloud-flags.svg';
-import cloudIcon from './assets/strapi-cloud-icon.svg';
-
-const BlockLink = styled.a`
-  text-decoration: none;
-`;
-
-const CloudCustomWrapper = styled(Box)`
-  background-image: url(${({ backgroundImage }) => backgroundImage});
-`;
-
-const CloudIconWrapper = styled(Flex)`
-  background: rgba(255, 255, 255, 0.3);
-`;
-
-const CloudBox = () => {
-  const { formatMessage } = useIntl();
-  const { trackUsage } = useTracking();
-
-  return (
-    <BlockLink
-      href="https://cloud.strapi.io"
-      target="_blank"
-      rel="noopener noreferrer nofollow"
-      onClick={() => {
-        trackUsage('didClickOnTryStrapiCloudSection');
-      }}
-    >
-      <Flex
-        shadow="tableShadow"
-        hasRadius
-        padding={6}
-        background="neutral0"
-        position="relative"
-        gap={6}
-      >
-        <CloudCustomWrapper backgroundImage={cloudIconBackgroundImage} hasRadius padding={3}>
-          <CloudIconWrapper
-            width={pxToRem(32)}
-            height={pxToRem(32)}
-            justifyContent="center"
-            hasRadius
-            alignItems="center"
-          >
-            <img
-              src={cloudIcon}
-              alt={formatMessage({
-                id: 'app.components.BlockLink.cloud',
-                defaultMessage: 'Strapi Cloud',
-              })}
-            />
-          </CloudIconWrapper>
-        </CloudCustomWrapper>
-        <Flex gap={1} direction="column" alignItems="start">
-          <Flex>
-            <Typography fontWeight="semiBold" variant="pi">
-              {formatMessage({
-                id: 'app.components.BlockLink.cloud',
-                defaultMessage: 'Strapi Cloud',
-              })}
-            </Typography>
-          </Flex>
-          <Typography textColor="neutral600">
-            {formatMessage({
-              id: 'app.components.BlockLink.cloud.content',
-              defaultMessage:
-                'A fully composable, and collaborative platform to boost your team velocity.',
-            })}
-          </Typography>
-          <Box src={cloudFlagsImage} position="absolute" top={0} right={0} as="img" />
-        </Flex>
-      </Flex>
-    </BlockLink>
-  );
-};
-
-export default CloudBox;
diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/ContentBlocks.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/ContentBlocks.js
deleted file mode 100644
index 84ec0ac..0000000
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/ContentBlocks.js
+++ /dev/null
@@ -1,106 +0,0 @@
-import React from 'react';
-
-import { Flex } from '@strapi/design-system';
-import { ContentBox, useTracking } from '@strapi/helper-plugin';
-import { CodeSquare, FeatherSquare, InformationSquare, PlaySquare } from '@strapi/icons';
-import { useIntl } from 'react-intl';
-import styled from 'styled-components';
-
-import CloudBox from './CloudBox';
-
-const BlockLink = styled.a`
-  text-decoration: none;
-`;
-
-const ContentBlocks = () => {
-  const { formatMessage } = useIntl();
-  const { trackUsage } = useTracking();
-
-  const handleClick = (eventName) => {
-    trackUsage(eventName);
-  };
-
-  return (
-    <Flex direction="column" alignItems="stretch" gap={5}>
-      <CloudBox />
-      <BlockLink
-        href="https://strapi.io/resource-center"
-        target="_blank"
-        rel="noopener noreferrer nofollow"
-        onClick={() => handleClick('didClickonReadTheDocumentationSection')}
-      >
-        <ContentBox
-          title={formatMessage({
-            id: 'global.documentation',
-            defaultMessage: 'Documentation',
-          })}
-          subtitle={formatMessage({
-            id: 'app.components.BlockLink.documentation.content',
-            defaultMessage: 'Discover the essential concepts, guides and instructions.',
-          })}
-          icon={<InformationSquare />}
-          iconBackground="primary100"
-        />
-      </BlockLink>
-      <BlockLink
-        href="https://strapi.io/starters"
-        target="_blank"
-        rel="noopener noreferrer nofollow"
-        onClick={() => handleClick('didClickonCodeExampleSection')}
-      >
-        <ContentBox
-          title={formatMessage({
-            id: 'app.components.BlockLink.code',
-            defaultMessage: 'Code example',
-          })}
-          subtitle={formatMessage({
-            id: 'app.components.BlockLink.code.content',
-            defaultMessage: 'Learn by using ready-made starters for your projects.',
-          })}
-          icon={<CodeSquare />}
-          iconBackground="warning100"
-        />
-      </BlockLink>
-      <BlockLink
-        href="https://strapi.io/blog/categories/tutorials"
-        target="_blank"
-        rel="noopener noreferrer nofollow"
-        onClick={() => handleClick('didClickonTutorialSection')}
-      >
-        <ContentBox
-          title={formatMessage({
-            id: 'app.components.BlockLink.tutorial',
-            defaultMessage: 'Tutorials',
-          })}
-          subtitle={formatMessage({
-            id: 'app.components.BlockLink.tutorial.content',
-            defaultMessage: 'Follow step-by-step instructions to use and customize Strapi.',
-          })}
-          icon={<PlaySquare />}
-          iconBackground="secondary100"
-        />
-      </BlockLink>
-      <BlockLink
-        href="https://strapi.io/blog"
-        target="_blank"
-        rel="noopener noreferrer nofollow"
-        onClick={() => handleClick('didClickonBlogSection')}
-      >
-        <ContentBox
-          title={formatMessage({
-            id: 'app.components.BlockLink.blog',
-            defaultMessage: 'Blog',
-          })}
-          subtitle={formatMessage({
-            id: 'app.components.BlockLink.blog.content',
-            defaultMessage: 'Read the latest news about Strapi and the ecosystem.',
-          })}
-          icon={<FeatherSquare />}
-          iconBackground="alternative100"
-        />
-      </BlockLink>
-    </Flex>
-  );
-};
-
-export default ContentBlocks;
diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/SocialLinks.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/SocialLinks.js
deleted file mode 100644
index e290ab2..0000000
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/SocialLinks.js
+++ /dev/null
@@ -1,203 +0,0 @@
-/**
- *
- * SocialLink
- */
-
-import React from 'react';
-
-import { Box, Flex, Grid, GridItem, Typography } from '@strapi/design-system';
-import { Link, LinkButton } from '@strapi/design-system/v2';
-import { useAppInfo } from '@strapi/helper-plugin';
-import { Discord, Discourse, ExternalLink, Github, Reddit, Strapi, Twitter } from '@strapi/icons';
-import { useIntl } from 'react-intl';
-import styled from 'styled-components';
-
-const StyledDiscord = styled(Discord)`
-  path {
-    fill: #7289da !important;
-  }
-`;
-
-const StyledReddit = styled(Reddit)`
-  > path:first-child {
-    fill: #ff4500;
-  }
-`;
-const StyledStrapi = styled(Strapi)`
-  > path:first-child {
-    fill: #4945ff;
-  }
-  > path:nth-child(2) {
-    fill: #fff;
-  }
-  > path:nth-child(4) {
-    fill: #9593ff;
-  }
-`;
-
-const StyledTwitter = styled(Twitter)`
-  path {
-    fill: #1da1f2 !important;
-  }
-`;
-
-const StyledDiscourse = styled(Discourse)`
-  > path:first-child {
-    fill: #231f20;
-  }
-  > path:nth-child(2) {
-    fill: #fff9ae;
-  }
-  > path:nth-child(3) {
-    fill: #00aeef;
-  }
-  > path:nth-child(4) {
-    fill: #00a94f;
-  }
-  > path:nth-child(5) {
-    fill: #f15d22;
-  }
-  > path:nth-child(6) {
-    fill: #e31b23;
-  }
-`;
-
-const socialLinks = [
-  {
-    name: { id: 'app.components.HomePage.community.links.github', defaultMessage: 'Github' },
-    link: 'https://github.com/strapi/strapi/',
-    icon: <Github fill="#7289DA" />,
-    alt: 'github',
-  },
-  {
-    name: { id: 'app.components.HomePage.community.links.discord', defaultMessage: 'Discord' },
-    link: 'https://discord.strapi.io/',
-    icon: <StyledDiscord />,
-    alt: 'discord',
-  },
-  {
-    name: { id: 'app.components.HomePage.community.links.reddit', defaultMessage: 'Reddit' },
-    link: 'https://www.reddit.com/r/Strapi/',
-    icon: <StyledReddit />,
-    alt: 'reddit',
-  },
-  {
-    name: { id: 'app.components.HomePage.community.links.twitter', defaultMessage: 'Twitter' },
-    link: 'https://twitter.com/strapijs',
-    icon: <StyledTwitter />,
-    alt: 'twitter',
-  },
-  {
-    name: { id: 'app.components.HomePage.community.links.forum', defaultMessage: 'Forum' },
-    link: 'https://forum.strapi.io',
-    icon: <StyledDiscourse />,
-    alt: 'forum',
-  },
-  {
-    name: { id: 'app.components.HomePage.community.links.blog', defaultMessage: 'Blog' },
-    link: 'https://strapi.io/blog?utm_source=referral&utm_medium=admin&utm_campaign=career%20page',
-    icon: <StyledStrapi />,
-    alt: 'blog',
-  },
-  {
-    name: {
-      id: 'app.components.HomePage.community.links.career',
-      defaultMessage: 'We are hiring!',
-    },
-    link: 'https://strapi.io/careers?utm_source=referral&utm_medium=admin&utm_campaign=blog',
-    icon: <StyledStrapi />,
-    alt: 'career',
-  },
-];
-
-const LinkCustom = styled(LinkButton)`
-  display: flex;
-  align-items: center;
-  border: none;
-
-  svg {
-    width: ${({ theme }) => theme.spaces[6]};
-    height: ${({ theme }) => theme.spaces[6]};
-  }
-
-  span {
-    word-break: keep-all;
-  }
-`;
-
-const GridGap = styled(Grid)`
-  row-gap: ${({ theme }) => theme.spaces[2]};
-  column-gap: ${({ theme }) => theme.spaces[4]};
-`;
-
-const SocialLinks = () => {
-  const { formatMessage } = useIntl();
-  const { communityEdition } = useAppInfo();
-
-  const socialLinksExtended = [
-    ...socialLinks,
-    {
-      icon: <StyledStrapi />,
-      link: communityEdition
-        ? 'https://discord.strapi.io'
-        : 'https://support.strapi.io/support/home',
-      name: {
-        id: 'Settings.application.get-help',
-        defaultMessage: 'Get help',
-      },
-    },
-  ];
-
-  return (
-    <Box
-      as="aside"
-      aria-labelledby="join-the-community"
-      background="neutral0"
-      hasRadius
-      paddingRight={5}
-      paddingLeft={5}
-      paddingTop={6}
-      paddingBottom={6}
-      shadow="tableShadow"
-    >
-      <Box paddingBottom={7}>
-        <Flex direction="column" alignItems="stretch" gap={5}>
-          <Flex direction="column" alignItems="stretch" gap={3}>
-            <Typography variant="delta" as="h2" id="join-the-community">
-              {formatMessage({
-                id: 'app.components.HomePage.community',
-                defaultMessage: 'Join the community',
-              })}
-            </Typography>
-            <Typography textColor="neutral600">
-              {formatMessage({
-                id: 'app.components.HomePage.community.content',
-                defaultMessage:
-                  'Discuss with team members, contributors and developers on different channels',
-              })}
-            </Typography>
-          </Flex>
-          <Link href="https://feedback.strapi.io/" isExternal endIcon={<ExternalLink />}>
-            {formatMessage({
-              id: 'app.components.HomePage.roadmap',
-              defaultMessage: 'See our road map',
-            })}
-          </Link>
-        </Flex>
-      </Box>
-      <GridGap>
-        {socialLinksExtended.map(({ icon, link, name }) => {
-          return (
-            <GridItem col={6} s={12} key={name.id}>
-              <LinkCustom size="L" startIcon={icon} variant="tertiary" href={link} isExternal>
-                {formatMessage(name)}
-              </LinkCustom>
-            </GridItem>
-          );
-        })}
-      </GridGap>
-    </Box>
-  );
-};
-
-export default SocialLinks;
diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
index a22f746..bd0feeb 100644
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
@@ -3,88 +3,19 @@
  *
  */

-import React, { useMemo } from 'react';

-import { Box, Grid, GridItem, Layout, Main } from '@strapi/design-system';
-import { LoadingIndicatorPage, useGuidedTour } from '@strapi/helper-plugin';
+import { Box,Layout } from '@strapi/design-system';
 import { Helmet } from 'react-helmet';
 import { FormattedMessage } from 'react-intl';
-import { useHistory } from 'react-router-dom';
-import styled from 'styled-components';

-import GuidedTourHomepage from '../../components/GuidedTour/Homepage';
-import isGuidedTourCompleted from '../../components/GuidedTour/utils/isGuidedTourCompleted';
-import { useContentTypes } from '../../hooks/useContentTypes';
 import { useEnterprise } from '../../hooks/useEnterprise';

-import cornerOrnamentPath from './assets/corner-ornament.svg';
-import ContentBlocks from './ContentBlocks';
-import HomeHeader from './HomeHeader';
-import SocialLinks from './SocialLinks';
-
-const LogoContainer = styled(Box)`
-  position: absolute;
-  top: 0;
-  right: 0;
-
-  img {
-    width: ${150 / 16}rem;
-  }
-`;
-
 export const HomePageCE = () => {
-  // Temporary until we develop the menu API
-  const { collectionTypes, singleTypes, isLoading: isLoadingForModels } = useContentTypes();
-  const { guidedTourState, isGuidedTourVisible, isSkipped } = useGuidedTour();
-  const showGuidedTour =
-    !isGuidedTourCompleted(guidedTourState) && isGuidedTourVisible && !isSkipped;
-  const { push } = useHistory();
-  const handleClick = (e) => {
-    e.preventDefault();
-
-    push('/plugins/content-type-builder/content-types/create-content-type');
-  };
-
-  const hasAlreadyCreatedContentTypes = useMemo(() => {
-    const filterContentTypes = (contentTypes) => contentTypes.filter((c) => c.isDisplayed);
-
-    return (
-      filterContentTypes(collectionTypes).length > 1 || filterContentTypes(singleTypes).length > 0
-    );
-  }, [collectionTypes, singleTypes]);
-
-  if (isLoadingForModels) {
-    return <LoadingIndicatorPage />;
-  }
-
   return (
     <Layout>
       <FormattedMessage id="HomePage.helmet.title" defaultMessage="Homepage">
         {(title) => <Helmet title={title[0]} />}
       </FormattedMessage>
-      <Main>
-        <LogoContainer>
-          <img alt="" aria-hidden src={cornerOrnamentPath} />
-        </LogoContainer>
-        <Box padding={10}>
-          <Grid>
-            <GridItem col={8} s={12}>
-              <HomeHeader
-                onCreateCT={handleClick}
-                hasCreatedContentType={hasAlreadyCreatedContentTypes}
-              />
-            </GridItem>
-          </Grid>
-          <Grid gap={6}>
-            <GridItem col={8} s={12}>
-              {showGuidedTour ? <GuidedTourHomepage /> : <ContentBlocks />}
-            </GridItem>
-            <GridItem col={4} s={12}>
-              <SocialLinks />
-            </GridItem>
-          </Grid>
-        </Box>
-      </Main>
     </Layout>
   );
 };
